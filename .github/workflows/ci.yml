name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Build on ${{ matrix.os }}, Node.js ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node: ['12.x', '14.x', '16.x']
    env:
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_IMAGE_PUBLIC_ID: ${{ secrets.CLOUDINARY_IMAGE_PUBLIC_ID }}
    steps:
      - name: üõéÔ∏è Checkout repo
        uses: actions/checkout@v3
      - name: ‚öôÔ∏è Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: ‚öôÔ∏è Install dependencies
        run: npm run ci
      - name: üîß Build package
        run: npm run build
  test-and-upload-test-coverage:
    name: Test on ${{ matrix.os }}, Node.js ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node: ['12.x', '14.x', '16.x']
    env:
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_IMAGE_PUBLIC_ID: ${{ secrets.CLOUDINARY_IMAGE_PUBLIC_ID }}
    steps:
      - name: üõéÔ∏è Checkout repo
        uses: actions/checkout@v3
      - name: ‚öôÔ∏è Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: ‚öôÔ∏è Install dependencies
        run: npm ci
      - name: üîç Test package
        run: npm run test --ci --coverage --maxWorkers=2
      - name: Upload coverage report to Coveralls
        # https://github.com/coverallsapp/github-action
        uses: coverallsapp/github-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: üõéÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: üõÉ SonarCloud Scan
        # https://github.com/sonarsource/sonarcloud-github-action
        uses: sonarsource/sonarcloud-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
